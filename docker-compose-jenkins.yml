  pipeline {
    agent any

    stages {
    stage('Checkout') {
    steps {
    checkout scm
    }
    }

    stage('Node Version') {
    steps {
    sh 'node --version'
    sh 'npm --version'
    }
    }

    stage('Install Dependencies') {
    steps {
    sh 'npm install'
    }
    }

    stage('Build') {
    steps {
    sh 'npm run build'
    }
    }

    stage('Verify Build') {
    steps {
    sh '''
    echo "Contenu du répertoire dist:"
    ls -la ./dist/patient-front/

    echo "Contenu du répertoire browser:"
    ls -la ./dist/patient-front/browser/

    echo "Vérification de l'index.html:"
    ls -la ./dist/patient-front/browser/index.html || echo "index.html non trouvé dans browser"
    '''
    }
    }

    stage('Start Angular') {
    steps {
    sh '''
    # Installer http-server si nécessaire
    npm install -g http-server

    # Démarrer http-server pointant vers le dossier browser
    http-server ./dist/patient-front/browser -p 4202 -a 0.0.0.0 --cors &

    # Attendre que le serveur démarre
    sleep 10
    '''
    }
    }

    stage('Check Server') {
    steps {
    sh '''
    # Obtenir l'adresse IP
    JENKINS_IP=$(hostname -i)

    # Vérifier si le serveur répond
    curl -v "http://$JENKINS_IP:4202/" || echo "Erreur lors de l'accès au serveur"
    echo "Server check complete!"
    '''
    }
    }

    stage('Selenium E2E Test') {
    steps {
    sh '''
    # Obtenir l'adresse IP du conteneur Jenkins
    JENKINS_IP=$(hostname -i)

    # Configurer l'URL pour les tests Selenium
    export APP_URL="http://$JENKINS_IP:4202"

    # Exécuter le test Selenium
    python3 tests/auth.py "$APP_URL" || true
    '''
    }
    }
    }

    post {
    always {
    sh 'pkill -f "http-server" || true'
    deleteDir()
    }
    success {
    echo 'Build réussi!'
    }
    failure {
    echo 'Build échoué!'
    }
    }
  }
