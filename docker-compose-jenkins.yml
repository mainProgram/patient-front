services:
  jenkins:
    build:
      context: .
      dockerfile: Jenkins.Dockerfile
    container_name: jenkins-frontend
    user: root
    privileged: true
    ports:
      - "8087:8080"
      - "50007:50000"
      - "4201:4201"
    volumes:
      - jenkins_home_frontend:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins-frontend-net
    restart: unless-stopped

  selenium:
    image: seleniarm/standalone-firefox:latest
    container_name: selenium
    shm_size: 2g
    ports:
      - "4444:4444"
      - "5900:5900"  # VNC
    networks:
      - jenkins-frontend-net

  angular-test:
    build:
      context: .
      target: development
    container_name: angular-test
    ports:
      - "4200:4200"
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - API_URL=http://backend-api:8080/api
    networks:
      - jenkins-frontend-net
    command: [ "npm", "run", "start", "--", "--host", "0.0.0.0" ]

  # Service Backend (patient-api)
  backend:
    build:
      context: https://github.com/mainProgram/patient-api.git
      dockerfile: Dockerfile
    container_name: backend-api
    ports:
      - "8084:8080"
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    command: [ "mvn", "spring-boot:run" ]
    networks:
      - jenkins-frontend-net

  # Base de donn√©es MongoDB
  mongo:
    image: mongo:4.4
    container_name: mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo_db:/data/db
    networks:
      - jenkins-frontend-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo --host localhost --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  jenkins-frontend-net:
    driver: bridge

volumes:
  jenkins_home_frontend:
  mongo_db:
